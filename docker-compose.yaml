version: '3.9'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

  js-app:
    build:
      context: ./js-app
    ports:
      - "3000:5173"
    container_name: js-app
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - frontend
      - backend
    volumes:
      - ../frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules

  postgres:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  prolog:
    build:
      context: ./prolog
    ports:
      - "8888:8888"
    container_name: prolog
    networks:
      - backend

  java-rest:
    build:
      context: ./deathpoint
    ports:
      - "8080:8080"
    container_name: java-rest
    volumes:
      - ../backend:/usr/src/app/backend
    networks:
      - backend

  nginx:
    build:
      context: ./nginx
      args:
        - UPSTREAM_CONTAINER=${NGINX_UPSTREAM_CONTAINER}
        - UPSTREAM_PORT=${NGINX_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - java-rest
      - js-app
    networks:
      - frontend
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
